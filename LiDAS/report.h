/*
*-----------------------------------------------------------------------
*
*   File         : report.h
*   Created      : 1995-08-14
*   Last Modified: 2012-05-28
*
*   Useful routines for producing reports.
*
*-----------------------------------------------------------------------
*/

/*                                           */
/* Make sure this file is not included twice */
/*                                           */

#ifndef _REPORT_DOT_H_
#define _REPORT_DOT_H_

/*
*---------------------------------------------------------------------
*   INCLUDE FILES
*---------------------------------------------------------------------
*/

#include "common.h"

/*
*-----------------------------------------------------------------------
*   Definition of constants
*-----------------------------------------------------------------------
*/

/* The following strings can be used for marking the start and */
/* end of tables in output generated by programs. Useful for   */
/* extracting numeric data from text files with "text2xgraph"  */
/* for posterior plotting.                                     */

#define REPORT_OPENING_TABLE_FORMAT    "<<Opening Table %d>>"
#define REPORT_CLOSING_TABLE_FORMAT    "<<Closing Table %d>>"

/* Regular expressions for recognizing the formats above */

#define REPORT_REGEX_OPENING_TABLE    "<<Opening Table \\([0-9]*\\)>>"
#define REPORT_REGEX_CLOSING_TABLE    "<<Closing Table \\([0-9]*\\)>>"

/*
*---------------------------------------------------------------------
*   Procedures defined in "report.c"
*---------------------------------------------------------------------
*/

extern char REPORT_answer_to_question  (char *question, char *accept);
extern void REPORT_close_table         (FILE *filePt);
extern void REPORT_open_table          (FILE *fileP);
extern void REPORT_repeat_char         (FILE *filePt, char character, int times);
extern void REPORT_reset_header_frame  (void);
extern void REPORT_newLine             (FILE *filePt, int lines);
extern void REPORT_write_output_header (FILE *filePt, char *fileName, char *progName, char *versionLabel, char *versionString);

extern void REPORT_make_multiple_strings (
 char ***strVec,        /* Pointer to array of strings            */
 char   *prefix,    	/* Common prefix to strings in the series */
 char   *suffix,    	/* Common suffix to strings in the series */
 int     first,     	/* First number in the series             */
 int     total,   	    /* Total numbers in the series            */
 int     digits );   	/* Digits of numbers in the series        */

extern void REPORT_prepare_header (
 char                    *header,
 int                      requested_size,
 STRING_t_justification   header_pos,
 char                   **header_top_line,
 char                   **header_middle_line,
 char                   **header_blank_line,
 char                   **header_bottom_line,
 int                     output_cols );

extern void REPORT_print_array (
 FILE *filePt,
 int  *array,
 int   from,
 int   to,
 char *array_name,
 char *print_format,
 int   output_cols );

/*
extern void REPORT_print_boolean_matrix (
 FILE          *filePt,
 unsigned char *p_matrix,
 int            rows,
 int            cols,
 char          *header,
 char          *rowLabel );
*/

extern void REPORT_print_integer_table (
 FILE *filePt,               /* Handle to output file                    */
 int  *table,                /* Bi-dimensional array of integers         */
 int   cols,                 /* Number of columns in array               */
 int   from_row,             /* Print from this row...                   */
 int   to_row,               /* ...to this one...                        */
 int   first_row_number,     /* ...numbering them from this value        */
 int   from_col,             /* Print from this column...                */
 int   to_col,               /* ...to this one                           */
 int   first_col_number,     /* ...numbering them from this value        */
 char *table_name,           /* String constant ie. not a print format   */
 char *row_header_string,    /* String constant above table rows         */
 char *row_label_format,     /* Print format for row labels              */
 char *col_label_format,     /* Print format for column labels           */
 int   header_gap,           /* Empty lines between header & table       */
 char *data_label_format,    /* Print format for labels of table entries */
 char *data_format );        /* Print format for table entries           */

extern void REPORT_print_command_line (
 FILE *filePt,
 char *leadStr,
 int   argc,
 char *argv[] );

extern void REPORT_set_header_frame (
 char ch_Vertical,
 char ch_Horizontal,
 char ch_TopLeft,
 char ch_TopRight,
 char ch_BottomLeft,
 char ch_BottomRight );

#endif /* ifndef _REPORT_DOT_H_ */
